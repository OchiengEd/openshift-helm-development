name: CI

on:
  pull_request_target:
    types: [opened, synchronize, reopened, edited, ready_for_review, labeled]

jobs:
  setup:
    name: Setup CI
    runs-on: ubuntu-22.04
    outputs:
      run_build: ${{ steps.check_build_required.outputs.run-build }}
      verifier-action-image: ${{ steps.set-env.outputs.verifier-action-image }}
      insecure_skip_tls_verify: ${{ steps.set-env.outputs.insecure_skip_tls_verify }}

    if: |
      github.event.pull_request.draft == false &&
      (github.event.action != 'labeled' || github.event.label.name == 'force-publish') &&
      github.actor != 'redhat-mercury-bot'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.x Part 1
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Set up Python 3.x Part 2
        run: |
          # set up python
          python3 -m venv ve1
          cd scripts
          ../ve1/bin/pip3 install -r requirements.txt
          ../ve1/bin/python3 setup.py install
          cd ..

      - name: Check for CI changes
        id: check_ci_changes
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          # check if workflow testing should run.
          echo "[INFO] check if PR contains only workflow changes and user is authorized"
          ve1/bin/check-pr-for-ci --verify-user=${{ github.event.pull_request.user.login }} --api-url=${{ github.event.pull_request._links.self.href }}

      - name: Check if PR created as part of release process
        id: check_created_release_pr
        if: ${{ steps.check_ci_changes.outputs.run-tests != true }}
        env:
          BOT_NAME: ${{ secrets.BOT_NAME }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          # check if PR was created as part of release processing
          ./ve1/bin/release-checker --api-url=${{ github.event.pull_request._links.self.href }} \
                                    --sender='${{ github.event.sender.login }}' \
                                    --pr_branch='${{ github.event.pull_request.head.ref }}' \
                                    --pr_body="${{ github.event.pull_request.body }}" \
                                    --pr_base_repo='${{ github.event.pull_request.base.repo.full_name }}' \
                                    --pr_head_repo='${{ github.event.pull_request.head.repo.full_name }}'

      - name: Exit if build not required
        id: check_build_required
        env:
          RUN_TESTS: ${{ steps.check_ci_changes.outputs.run-tests }}
          NOT_CI_AUTHORIZED: ${{ steps.check_ci_changes.outputs.workflow-only-but-not-authorized }}
          NO_CODE_TO_BUILD: ${{ steps.check_ci_changes.outputs.do-not-build }}
          DEV_PR_FOR_RELEASE: ${{ steps.check_created_release_pr.outputs.dev_release_branch }}
          CHARTS_PR_FOR_RELEASE: ${{ steps.check_created_release_pr.outputs.charts_release_branch }}
        run: |
          # exit if build not required
          if [ "${RUN_TESTS}" == "true" ] || [ "${NOT_CI_AUTHORIZED}" == "true" ]; then
            echo "The PR is workflow changes only - do not continue."
            exit 0
          elif [ "${NO_CODE_TO_BUILD}" == "true" ]; then
            echo "The PR does not contain changes which need build or test."
            exit 0
          elif [ "${DEV_PR_FOR_RELEASE}" == "true" ]; then
            echo "The PR is part of release processing for the development repository - do not continue."
          elif [ "${CHART_PR_FOR_RELEASE}" == "true" ]; then
            echo "The PR is part of release processing for the charts repository - do not continue."
          else
            echo "run-build=true" >> $GITHUB_OUTPUT
          fi

      - name: Set Environment
        id: set-env
        run: |
          #set environment based on repository
          if [ $GITHUB_REPOSITORY == "openshift-helm-charts/charts" ]; then
            echo "Use latest verifier image"
            echo "verifier-action-image=latest" >> $GITHUB_OUTPUT
          else
            echo "Use dev verifier image"
            echo "verifier-action-image=0.1.0" >> $GITHUB_OUTPUT
          fi
          echo "insecure_skip_tls_verify=true" >> $GITHUB_OUTPUT

